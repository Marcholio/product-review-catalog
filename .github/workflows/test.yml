name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Run unit tests
        working-directory: ./frontend
        run: npm test

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Install Cypress dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: ./frontend
          build: npm run build
          start: npm run preview
          wait-on: 'http://localhost:4173'
          browser: chrome
          record: false

  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: adminpass
          POSTGRES_DB: product_catalog
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      - name: Run backend tests
        working-directory: ./backend
        run: npm test
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: admin
          DB_PASSWORD: adminpass
          DB_NAME: product_catalog
          JWT_SECRET: test_secret
          NODE_ENV: test